硬件设备：AMC to PCIE转接卡，TMS320C6678L-EVM，LINUX PC
工作：测试Ubuntu1604下6678的pcie通信
	1，最新的IBL和MCSDK（多核软件开发套件）mcsdk中有预编译好的IBL，需要对IBL进行修改，修改成pcie的boot mode；
	   IBL的作用，首先进行锁相环的初始化，（有别于传统的RBL），判断bootmode是否为i2c，更新拨码开关的启动模式和对应的DEVSTAT寄存器，在pcie启动之前，对PCIe进行初始化，清除magic_addr，主机host下载DDR的初始化镜像，将启动的入口地址写到magic_addr，从IBL跳出来进行pcie启动。
	对于使用DDR的pcie启动demo，要对ddr进行适当的配置，在l2内存中下载DDR初始化镜像去初始化DDR，重置magic_addr=0，然后下载应用程序到DDR

	2，烧写IBL到i2c总线上的eeprom中，设置板卡为pcie启动
	多核软件包MCSDK中有eeprom的烧写器，进行适当的配置将配置好的IBL烧到指定位置，设置板卡启动模式有两个地方，一个是IBL中的pcie启动模式，另一个是板卡上的拨码开关
	3，确保pcie设备被pc枚举，（6678在ibl程序中显示设备id为0xb005）
	pcie设备在linux下是一个多媒体设备，识别到该设备即表明该设备被枚举

	4，将pcie启动代码通过linux编译后的pcie.ko加载到linux内核中

	pcie的启动代码包括DDR内存的初始化，串口的初始化，中断的初始化，DSP本地复位的初始化，以及DSP和pc内存之间的映射

	A，DDR的初始化，DDR的初始化文件需要一系列的文件转化器实现，最后的文件是一个数组头文件，将其并入pcie的启动文件下；

	B，串口初始化，用来打印从DSP核到串口的启动信息，当DSP运行的时候，在linux主机将DDR初始化引导镜像数据推送到DSP核的L2内存中，然后写入通过pcie在dsp核的magic_addr写上ddr初始化引导镜像的入口地址，当板子处于pcie启动模式的时候，在DSP核上运行的IBL代码将跳转到该地址并开始引导，ddr初始化后，ddr初始化代码会清除magicaddr并继续轮询，然后linux主机将uart初始化引导镜像数据推送给DDR内存，然后写入引导

	C，中断初始化，初始化串口等使支持中断，以及在linux和dsp之间移动数据，使用edma方式，通过pcie链接去使用linux与dsp之间的中断，在主机端，将启动映像数据到dsp核l2内存，然后通过pcie将引导入口地址写入dsp核的magic__addr，dsp核的运行ibl并跳转到这个地址，并进行启动，去初始化DDR，配置中断，使用csl（edma的一个库），通过edma将数据写入内存，然后发送中断，dsp的isr在接受来自主机的中断请求后进行简单的数据操作，发送中断给主机端，主机端收到中断后，从DSP的ddr内存读数据；
        使用edma中断寄存器实现中断，从linux通过pcie链接，从DSP角度看，这是一个作为本地出站转移，dsp设备启动从外部设备pc写入或读取的操作，将数据从dsp转移到pc，这是dsp的输出，同样将数据从pc到dsp，这是dsp的输入，在pcie的规范用法中这样用的。同时，edma可以测试pcie的吞吐量

        D，在调试过程中，不免要经常重启动pcie设备，这个程序在重启dsp的时候，同时保持pcie配置不变

	E，pcie在linux下的启动程序，编译后作为pcie启动映像文件，主要在pc内存和dsp内存之间做一个内存映射，其中4块内存由dsp通过pcie注册，（bar1234，大小分别为
4k，512k，4m，16m），当pcie启动的时候，在pcie初始化代码中配置该空间；通过访问应用程序去配置pcie入站地址转换；提供dsp内存读写的api；对引导入口地址的字节大小和启动映像中的数组头文件进行解析，并通过api将引导数据加载到dsp内存中；通过api将引导入口地址写入dsp核的magic_addr；提供dsp内存读写api通过edma进行批量数据传输；	
	F，在linux下打开串口，会显示pcie启动成功的信息



测试设置流程和结果展示
1，连接系统之前，配置并编译IBL到相应位置，---------------------------------IBL的烧写
2，设置拨码开关，sw3，sw4，sw5，sw6，sw9到正确位置，确保通过pcie启动-------dip的设置
3，将dsp插入PC的pcie插槽中，pcie可以为dsp供电，断掉外接电源----------------dsp与pc的链接
4，串口管脚的连接----------------------------------------------------------串口的连接
5，确保pcie设备被pc正确枚举，DEVICE_ID在IBL中配置成了0xb005，在pc下检查----pc识别dsp
6，进入pc的bios设置，会显示新的pcie设备为多媒体设备
7，当linux启动后，lspci会出现该pcie设备
8，编译pcie启动代码，编译过程复杂不予介绍了，目前已经编译成功--------------编译pcie启动代码
9，打开串口终端并配置相应参数----------------------------------------------配置串口
10，将编译好的pcie启动镜像（.ko文件）加载到linux内核-----------------------加载pcie启动代码
11，串口终端显示pcie启动信息-----------------------------------------------启动成功
